# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  #config.vm.box = "base"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder "./data", "/var/www/html"
  # Disable the default share of the current code directory. Doing this
  # provides improved isolation between the vagrant box and your host
  # by making sure your Vagrantfile isn't accessable to the vagrant box.
  # If you use this you may want to enable additional shared subfolders as
  # shown above.
  # config.vm.synced_folder ".", "/vagrant", disabled: true

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
  config.vm.box = "generic/ubuntu2204"
  #config.vm.provision :shell, path: "provision.sh"
  config.vm.provision "shell", inline: <<-SHELL
    #Install Apache web server
    sudo apt-get update
    sudo apt-get -y install  apache2

    #Start Apache and set it to run at boot
    sudo service apache2 start
    sudo systemctl enable apache2

    #Install php
    sudo apt-get -y install php libapache2-mod-php

    #Install MySQL
    sudo debconf-set-selections <<< 'mysql-server mysql-server/root_password password root'
    sudo debconf-set-selections <<< 'mysql-server mysql-server/root_password_again password root'
    sudo apt-get -y install mysql-server

    #Make MySQL and  PHP friends
    sudo apt-get -y install php-mysql

    #Grant permissions
    sudo chown -R $USER:$USER /var/www/
    sudo chmod -R 755 /var/www

    #Create PHP files with times
    sudo echo '<?php date_default_timezone_set("Asia/Novosibirsk"); $current_time = date("Y-m-d H:i:s"); echo "Current time in Novosibirsk: " . \$current_time;?>' > /var/www/html/nsk.php
    sudo echo '<?php date_default_timezone_set("America/Los_Angeles"); \$current_time = date("Y-m-d H:i:s"); echo "Current time in Los Angeles: " . \$current_time;?>' > /var/www/html/l-a.php

    #Create PHP file entry.php which will do routing
    echo -e '<?php\n// Получаем значение параметра city из запроса\n\$city = isset(\$_GET["city"]) ? \$_GET["city"] : "";\n\n// В зависимости от значения параметра city, выводим местное время\nif (\$city === "nsk") {\n    include \"nsk.php\";\n} elseif (\$city === "l-a") {\n    include \"l-a.php\";\n} else {\n   include \"nsk.php\";\n}\n?>' > /var/www/html/entry.php

    #Create .htaccess file
    echo -e "RewriteEngine On\nRewriteBase /\n\n# Правило для перенаправления на index.php, если url path пустой\nRewriteRule ^\$ entry.php [L]\n\n# Правило для обработки запросов на nsk\nRewriteRule ^nsk\$ entry.php?city=nsk [L]\n\n# Правило для обработки запросов на l-a\nRewriteRule ^l-a\$ entry.php?city=l-a [L]" > /var/www/html/.htaccess


    #Add Virtual Hosts
    #sudo sed -i 's|/var/www/html|/var/www/nsk.time|g' /etc/apache2/sites-available/nsk.time.conf
    #sudo a2ensite nsk.time.conf
    # Копируем и включаем конфигурацию для сайта nsk.time.test
    # sudo cp /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/nsk.time.conf
    # sed -i '/ServerAdmin webmaster@localhost/a \    ServerName nsk.time.test' /etc/apache2/sites-available/nsk.time.conf
    # sudo sed -i 's|/var/www/html|/var/www/nsk.time|g' /etc/apache2/sites-available/nsk.time.conf
    # sudo a2ensite nsk.time.conf

    # Копируем и включаем конфигурацию для сайта l-a.time.test
    # sudo cp /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/l-a.time.conf
    # sed -i '/ServerAdmin webmaster@localhost/a \    ServerName l-a.time.test' /etc/apache2/sites-available/l-a.time.conf
    # sudo sed -i 's|/var/www/html|/var/www/l-a.time|g' /etc/apache2/sites-available/l-a.time.conf
    # sudo a2ensite l-a.time.conf

    # Disable default config
    # sudo a2dissite 000-default.conf

    #Allow Override for .htaccess to work
    sudo sed -i 's/AllowOverride None/AllowOverride All/' /etc/apache2/apache2.conf
    sudo a2enmod rewrite

    #Restart Apache to serve the new websites
    sudo systemctl restart apache2

    #Allow Override for .htaccess to work
    #sudo sed -i 's/<Directory \/var\/www\/>/&\n    AllowOverride All/' /etc/apache2/apache2.conf
    #sudo a2enmod rewrite
  SHELL
  config.vm.network "private_network", ip: "192.168.33.10"
end


